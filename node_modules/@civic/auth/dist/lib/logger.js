import debug from "debug";
const PACKAGE_NAME = "@civic/auth";
class DebugLogger {
    debugLogger;
    infoLogger;
    warnLogger;
    errorLogger;
    constructor(namespace) {
        // Format: @org/package:library:component:level
        this.debugLogger = debug(`${PACKAGE_NAME}:${namespace}:debug`);
        this.infoLogger = debug(`${PACKAGE_NAME}:${namespace}:info`);
        this.warnLogger = debug(`${PACKAGE_NAME}:${namespace}:warn`);
        this.errorLogger = debug(`${PACKAGE_NAME}:${namespace}:error`);
        this.debugLogger.color = "4";
        this.infoLogger.color = "2";
        this.warnLogger.color = "3";
        this.errorLogger.color = "1";
    }
    debug(message, ...args) {
        this.debugLogger(message, ...args);
    }
    info(message, ...args) {
        this.infoLogger(message, ...args);
    }
    warn(message, ...args) {
        this.warnLogger(message, ...args);
    }
    error(message, ...args) {
        this.errorLogger(message, ...args);
    }
}
export const createLogger = (namespace) => new DebugLogger(namespace);
// Pre-configured loggers for different parts of the package
export const loggers = {
    // Next.js specific loggers
    nextjs: {
        routes: createLogger("api:routes"),
        middleware: createLogger("api:middleware"),
        handlers: {
            auth: createLogger("api:handlers:auth"),
        },
    },
    // React specific loggers
    react: {
        components: createLogger("react:components"),
        hooks: createLogger("react:hooks"),
        context: createLogger("react:context"),
    },
    // Shared utilities loggers
    services: {
        validation: createLogger("utils:validation"),
        network: createLogger("utils:network"),
    },
};
//# sourceMappingURL=logger.js.map