import type { DisplayMode, Endpoints } from "../types.js";
declare const getIssuerVariations: (issuer: string) => string[];
declare const getOauthEndpoints: (oauthServer: string) => Promise<Endpoints>;
/**
 * creates a state string for the OAuth2 flow, encoding the display mode too for future use
 * @param {DisplayMode} displayMode
 * @returns {string}
 */
declare const generateState: (displayMode: DisplayMode, serverTokenExchange?: boolean) => string;
/**
 * parses the state string from the OAuth2 flow, decoding the display mode too
 * @param state
 * @param sessionDisplayMode
 * @returns { uuid: string, displayMode: DisplayMode }
 */
declare const displayModeFromState: (state: string, sessionDisplayMode: DisplayMode | undefined) => DisplayMode | undefined;
declare const serverTokenExchangeFromState: (state: string) => boolean | undefined;
export { serverTokenExchangeFromState, getIssuerVariations, getOauthEndpoints, displayModeFromState, generateState, };
//# sourceMappingURL=oauth.d.ts.map