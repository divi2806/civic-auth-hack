import { cookies } from "next/headers.js";
import {} from "../shared/lib/types.js";
import { CookieStorage } from "../shared/lib/storage.js";
import * as session from "../shared/lib/session.js";
/**
 * Clears all authentication cookies on server. Note, this can only be called by the server
 */
const clearAuthCookies = async () => {
    const cookieStorage = new NextjsCookieStorage(); // no cookie storage needed to simply clear it
    await session.clearAuthCookies(cookieStorage);
};
class NextjsCookieStorage extends CookieStorage {
    config;
    constructor(config = {}) {
        super({
            secure: true,
            httpOnly: true,
        });
        this.config = config;
    }
    async get(key) {
        const cookieStore = await cookies();
        return cookieStore.get(key)?.value || null;
    }
    async set(key, value, cookieConfigOverride = {}) {
        const cookieStore = await cookies();
        const cookieSettings = this.config?.[key] || {
            ...this.settings,
        };
        const useCookieSettings = { ...cookieSettings, ...cookieConfigOverride };
        cookieStore.set(key, value, useCookieSettings);
    }
    async delete(key) {
        const cookieStore = await cookies();
        cookieStore.delete(key);
    }
}
export { clearAuthCookies, NextjsCookieStorage };
//# sourceMappingURL=cookies.js.map