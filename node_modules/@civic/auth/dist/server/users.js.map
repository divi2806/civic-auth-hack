{"version":3,"file":"users.js","sourceRoot":"","sources":["../../src/server/users.ts"],"names":[],"mappings":"AAAA,OAAO,EAMN,MAAM,YAAY,CAAC;AAEpB,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,OAAO,CAC3B,OAAoB,EACpB,MAAkB;IAElB,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACjD,OAAO,SAAS,CAAC,OAAO,EAAK,CAAC;AAChC,CAAC;AAED;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,SAAS,CAC7B,OAAoB,EACpB,MAAkB;IAElB,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACjD,OAAO,SAAS,CAAC,SAAS,EAAE,CAAC;AAC/B,CAAC","sourcesContent":["import {\n  type AuthStorage,\n  type OAuthTokens,\n  type User,\n  type EmptyObject,\n  type UnknownObject,\n} from \"@/types.js\";\nimport type { AuthConfig } from \"@/server/config.js\";\nimport { CivicAuth } from \"@/server/session.js\";\n\n/**\n * Gets the authenticated user with token validation\n * @param storage The auth storage\n * @param config The auth configuration\n */\nexport async function getUser<T extends UnknownObject = EmptyObject>(\n  storage: AuthStorage,\n  config: AuthConfig,\n): Promise<User<T> | null> {\n  const civicAuth = new CivicAuth(storage, config);\n  return civicAuth.getUser<T>();\n}\n\n/**\n * Gets the authentication tokens with token validation\n * @param storage The auth storage\n * @param config The auth configuration\n */\nexport async function getTokens(\n  storage: AuthStorage,\n  config: AuthConfig,\n): Promise<OAuthTokens | null> {\n  const civicAuth = new CivicAuth(storage, config);\n  return civicAuth.getTokens();\n}\n"]}