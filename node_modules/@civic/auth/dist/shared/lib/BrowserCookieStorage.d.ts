import { CookieStorage, type CookieStorageSettings } from "../../shared/lib/storage.js";
import type { CookieConfig } from "./types.js";
/**
 * BrowserCookieStorage is a cookie storage implementation that works in the browser.
 * It uses the document.cookie API to set and get cookies.
 * Although retrieval of browser cookies is synchronous, the API is designed to be async for compatibility with other storage implementations.
 */
export declare class BrowserCookieStorage extends CookieStorage {
    constructor(config?: Partial<CookieStorageSettings>);
    getSync(key: string): string | null;
    setSync(key: string, value: string, cookieConfigOverride?: Partial<CookieConfig>): void;
    deleteSync(key: string): void;
    get(key: string): Promise<string | null>;
    set(key: string, value: string, cookieConfigOverride?: Partial<CookieConfig>): Promise<void>;
    delete(key: string): Promise<void>;
}
//# sourceMappingURL=BrowserCookieStorage.d.ts.map