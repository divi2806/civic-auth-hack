import { UserStorage } from "../../shared/lib/types.js";
import { convertForwardedTokenFormat } from "../../lib/jwt.js";
export class GenericUserSession {
    storage;
    constructor(storage) {
        this.storage = storage;
    }
    async get() {
        const user = await this.storage.get(UserStorage.USER);
        return user ? JSON.parse(user) : null;
    }
    async set(user) {
        const forwardedTokens = user?.forwardedTokens
            ? convertForwardedTokenFormat(user?.forwardedTokens)
            : null;
        const value = user ? JSON.stringify({ ...user, forwardedTokens }) : "";
        await this.storage.set(UserStorage.USER, value);
    }
    async clear() {
        await this.storage.delete(UserStorage.USER);
    }
}
//# sourceMappingURL=UserSession.js.map