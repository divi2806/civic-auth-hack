{"version":3,"file":"CivicAuthConfigContext.js","sourceRoot":"","sources":["../../../src/shared/providers/CivicAuthConfigContext.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AACb,OAAO,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AACrE,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,OAAO,EAAkB,MAAM,OAAO,CAAC;AACtE,OAAO,EAAE,iBAAiB,EAAE,MAAM,qCAAqC,CAAC;AACxE,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAIhE,MAAM,aAAa,GAAoB,IAAI,CAAC;AAgB5C,gEAAgE;AAChE,MAAM,sBAAsB,GAAG,aAAa,CAAkB,aAAa,CAAC,CAAC;AAE7E,MAAM,uBAAuB,GAAG,CAAC,EAC/B,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,WAAW,EAAE,gBAAgB,EAC7B,KAAK,EACL,YAAY,EACZ,UAAU,EACV,SAAS,EACT,MAAM,EACN,iBAAiB,EAAE,sBAAsB,EACzC,WAAW,GAAG,QAAQ,GACK,EAAE,EAAE;IAC/B,MAAM,UAAU,GAAG,aAAa,EAAE,CAAC;IAEnC,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,EAAE;QAC/B,MAAM,MAAM,GAAG,gBAAgB,IAAI,UAAU,CAAC;QAC9C,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnC,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACnC,MAAM,SAAS,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAEjD,MAAM,iBAAiB,GAAG,OAAO,CAAC,GAAG,EAAE;QACrC,MAAM,MAAM,GAAG,sBAAsB,IAAI,UAAU,CAAC;QACpD,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnC,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC,CAAC;IAEzC,MAAM,KAAK,GAAG,OAAO,CACnB,GAAG,EAAE,CACH,SAAS;QACP,CAAC,CAAC;YACE,QAAQ;YACR,WAAW;YACX,WAAW,EAAE,WAAW,IAAI,mBAAmB;YAC/C,SAAS;YACT,KAAK;YACL,YAAY;YACZ,UAAU;YACV,SAAS;YACT,MAAM,EAAE,MAAM,IAAI,cAAc;YAChC,iBAAiB;YACjB,WAAW;SACZ;QACH,CAAC,CAAC,IAAI,EACV;QACE,QAAQ;QACR,WAAW;QACX,WAAW;QACX,SAAS;QACT,KAAK;QACL,YAAY;QACZ,UAAU;QACV,SAAS;QACT,MAAM;QACN,iBAAiB;QACjB,WAAW;KACZ,CACF,CAAC;IACF,OAAO,CACL,KAAC,sBAAsB,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,YAC1C,QAAQ,GACuB,CACnC,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,uBAAuB,EAAE,sBAAsB,EAAE,CAAC","sourcesContent":["\"use client\";\nimport { DEFAULT_AUTH_SERVER, DEFAULT_SCOPES } from \"@/constants.js\";\nimport React, { createContext, useMemo, type ReactNode } from \"react\";\nimport { useOAuthEndpoints } from \"@/shared/hooks/useOAuthEndpoints.js\";\nimport { useCurrentUrl } from \"@/shared/hooks/useCurrentUrl.js\";\nimport type { CivicAuthConfig } from \"../lib/types.js\";\nimport type { DisplayMode } from \"@/types.js\";\n\nconst defaultConfig: CivicAuthConfig = null;\n\ntype CivicAuthConfigContextType = {\n  children: ReactNode;\n  oauthServer?: string;\n  clientId: string;\n  scopes?: string[];\n  redirectUrl?: string;\n  logoutRedirectUrl?: string;\n  nonce?: string;\n  challengeUrl?: string;\n  refreshUrl?: string;\n  logoutUrl?: string;\n  logoutCallbackUrl?: string;\n  displayMode?: DisplayMode;\n};\n// Context for exposing Config specifically to the TokenProvider\nconst CivicAuthConfigContext = createContext<CivicAuthConfig>(defaultConfig);\n\nconst CivicAuthConfigProvider = ({\n  children,\n  oauthServer,\n  clientId,\n  redirectUrl: inputRedirectUrl,\n  nonce,\n  challengeUrl,\n  refreshUrl,\n  logoutUrl,\n  scopes,\n  logoutRedirectUrl: inputLogoutRedirectUrl,\n  displayMode = \"iframe\",\n}: CivicAuthConfigContextType) => {\n  const currentUrl = useCurrentUrl();\n\n  const redirectUrl = useMemo(() => {\n    const useUrl = inputRedirectUrl || currentUrl;\n    if (useUrl) {\n      return `${useUrl.split(\"?\")[0]}`;\n    }\n    return \"\";\n  }, [currentUrl, inputRedirectUrl]);\n  const endpoints = useOAuthEndpoints(oauthServer);\n\n  const logoutRedirectUrl = useMemo(() => {\n    const useUrl = inputLogoutRedirectUrl || currentUrl;\n    if (useUrl) {\n      return `${useUrl.split(\"?\")[0]}`;\n    }\n    return \"\";\n  }, [currentUrl, inputLogoutRedirectUrl]);\n\n  const value = useMemo(\n    () =>\n      endpoints\n        ? {\n            clientId,\n            redirectUrl,\n            oauthServer: oauthServer || DEFAULT_AUTH_SERVER,\n            endpoints,\n            nonce,\n            challengeUrl,\n            refreshUrl,\n            logoutUrl,\n            scopes: scopes || DEFAULT_SCOPES,\n            logoutRedirectUrl,\n            displayMode,\n          }\n        : null,\n    [\n      clientId,\n      redirectUrl,\n      oauthServer,\n      endpoints,\n      nonce,\n      challengeUrl,\n      refreshUrl,\n      logoutUrl,\n      scopes,\n      logoutRedirectUrl,\n      displayMode,\n    ],\n  );\n  return (\n    <CivicAuthConfigContext.Provider value={value}>\n      {children}\n    </CivicAuthConfigContext.Provider>\n  );\n};\n\nexport { CivicAuthConfigProvider, CivicAuthConfigContext };\n"]}