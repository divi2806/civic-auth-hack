{"version":3,"file":"AuthStatusContext.js","sourceRoot":"","sources":["../../../src/shared/providers/AuthStatusContext.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACnE,OAAO,EAAE,UAAU,EAAE,MAAM,YAAY,CAAC;AAOxC,MAAM,iBAAiB,GAAG,aAAa,CACrC,SAAS,CACV,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAA4C,CAAC,EAC1E,QAAQ,GACT,EAAE,EAAE;IACH,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAC1C,UAAU,CAAC,eAAe,CAC3B,CAAC;IAEF,OAAO,CACL,KAAC,iBAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,YAC7D,QAAQ,GACkB,CAC9B,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,GAA0B,EAAE;IACvD,MAAM,OAAO,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC;IAC9C,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState } from \"react\";\nimport { AuthStatus } from \"@/types.js\";\n\ninterface AuthStatusContextType {\n  authStatus: AuthStatus;\n  setAuthStatus: React.Dispatch<React.SetStateAction<AuthStatus>>;\n}\n\nconst AuthStatusContext = createContext<AuthStatusContextType | undefined>(\n  undefined,\n);\n\nexport const AuthStatusProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [authStatus, setAuthStatus] = useState<AuthStatus>(\n    AuthStatus.UNAUTHENTICATED,\n  );\n\n  return (\n    <AuthStatusContext.Provider value={{ authStatus, setAuthStatus }}>\n      {children}\n    </AuthStatusContext.Provider>\n  );\n};\n\nexport const useAuthStatus = (): AuthStatusContextType => {\n  const context = useContext(AuthStatusContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthStatus must be used within an AuthStatusProvider\");\n  }\n  return context;\n};\n"]}