"use client";
import { jsx as _jsx, jsxs as _jsxs } from "@emotion/react/jsx-runtime";
import { CivicAuthIframe } from "../../shared/components/CivicAuthIframe.js";
import { useIframe } from "../../shared/hooks/index.js";
import { LoadingIcon } from "./LoadingIcon.js";
import { IframeChrome } from "./CivicAuthIframeContainer.js";
import { useIsClient } from "usehooks-ts";
const CivicAuthLogoutIframeContainer = ({ isLoading = false, }) => {
    const { logoutIframeRef } = useIframe();
    const isClient = useIsClient();
    // don't render the in server-mode as the appearance changes after load
    return !isClient ? null : (_jsxs(IframeChrome, { isFrameLoaded: true, children: [isLoading ? (_jsx("div", { id: "civic-auth-loading-icon-wrapper", style: {
                    position: "absolute",
                    inset: 0,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                }, children: _jsx(LoadingIcon, {}) })) : null, _jsx(CivicAuthIframe, { ref: logoutIframeRef, id: "civic-auth-logout-iframe", onLoad: () => { } })] }));
};
export { CivicAuthLogoutIframeContainer };
//# sourceMappingURL=CivicAuthLogoutIframeContainer.js.map