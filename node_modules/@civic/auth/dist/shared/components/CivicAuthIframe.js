"use client";
import { jsx as _jsx, jsxs as _jsxs } from "@emotion/react/jsx-runtime";
import React, { forwardRef } from "react";
import { IframeResizer } from "@civic/iframe-resizer";
import SVGLoading from "./SVGLoading.js";
import { useIframe } from "../hooks/useIframe.js";
import { useIsClient } from "usehooks-ts";
const CivicAuthIframe = forwardRef(({ onLoad, id }, ref) => {
    const [isLoaded, setIsLoaded] = React.useState(false);
    const { iframeMode, backgroundColor } = useIframe();
    const iframeRef = ref;
    const isClient = useIsClient();
    // don't render on the server as the appearance changes when the iframe is loaded from login-app post-messages
    return !isClient ? null : (_jsxs("div", { style: {
            position: "relative",
            borderRadius: isLoaded ? "24px" : 0,
            overflow: "hidden",
            transition: "all 250ms ease",
            backgroundColor: isLoaded ? backgroundColor : "transparent",
            minHeight: iframeMode !== "embedded" ? "26px" : "auto",
        }, children: [!isLoaded ? (_jsx("div", { "data-testid": "iframe-shimmer-loader", style: {
                    width: "100%",
                    height: "26px",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    position: "absolute",
                    top: "50%",
                    left: "50%",
                    transform: "translate(-50%, -50%)",
                    borderRadius: "13px",
                    overflow: "hidden",
                }, children: iframeMode !== "embedded" && (_jsx(SVGLoading, { backgroundColor: backgroundColor })) })) : null, _jsx("div", { style: {
                    opacity: isLoaded ? 1 : 0,
                    transition: "opacity 250ms ease",
                }, children: _jsx(IframeResizer, { ref: iframeRef, id: id, "data-testid": "civic-auth-iframe-with-resizer", initialHeight: iframeMode !== "embedded" ? "26px" : "max-content", animate: true, animationDuration: 250, checkOrigin: false, style: {
                        width: "100%",
                        border: "none",
                        minWidth: "100%",
                        backgroundColor: isLoaded ? backgroundColor : "transparent",
                        pointerEvents: "auto",
                    }, onLoad: () => {
                        setIsLoaded(true);
                        onLoad?.();
                    }, allow: "camera; screen-wake-lock", allowFullScreen: true }) })] }));
});
CivicAuthIframe.displayName = "CivicAuthIframe";
export { CivicAuthIframe };
//# sourceMappingURL=CivicAuthIframe.js.map