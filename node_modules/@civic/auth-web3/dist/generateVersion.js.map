{"version":3,"file":"generateVersion.js","sourceRoot":"","sources":["../src/generateVersion.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,IAAI,CAAC;AAEjD,mFAAmF;AACnF,MAAM,eAAe,GAAG,gBAAgB,CAAC;AACzC,MAAM,UAAU,GAAG,yBAAyB,CAAC;AAE7C,gDAAgD;AAChD,MAAM,kBAAkB,GAAG,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AAClE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;AAEzD,kCAAkC;AAClC,MAAM,OAAO,GAAG,8EAA8E,IAAI,IAAI,OAAO,MAAM,CAAC;AAEpH,qCAAqC;AACrC,aAAa,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC","sourcesContent":["import { writeFileSync, readFileSync } from \"fs\";\n\n// Get the path to package.json and output location from the command line arguments\nconst packageJsonPath = \"./package.json\";\nconst outputPath = \"./src/shared/version.ts\";\n\n// Read the package.json and extract the version\nconst packageJsonContent = readFileSync(packageJsonPath, \"utf-8\");\nconst { version, name } = JSON.parse(packageJsonContent);\n\n// Generate the TypeScript content\nconst content = `// This is an auto-generated file. Do not edit.\\n\\nexport const VERSION = \"${name}:${version}\";\\n`;\n\n// Write to the specified output file\nwriteFileSync(outputPath, content);\n"]}