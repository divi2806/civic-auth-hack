import type { ExistingWeb3UserContext, NewWeb3UserContext, SparseWallet, UnknownObject } from "../types.js";
export type ServerExistingWeb3UserContext<T extends UnknownObject = UnknownObject> = Omit<ExistingWeb3UserContext<T>, "signIn" | "signOut" | "isLoading" | "isAuthenticated" | "error" | "wallet" | "walletCreationInProgress" | "displayMode"> & {
    wallet: SparseWallet | null;
};
export type ServerNewWeb3UserContext<T extends UnknownObject = UnknownObject> = Omit<NewWeb3UserContext<T>, "signIn" | "signOut" | "isLoading" | "isAuthenticated" | "error" | "walletCreationInProgress" | "displayMode">;
export type ServerUserContextType<T extends UnknownObject = UnknownObject> = ServerExistingWeb3UserContext<T> | ServerNewWeb3UserContext<T>;
//# sourceMappingURL=types.d.ts.map