{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/lib/utils.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,UAAa,EACb,WAAwB,EACrB,EAAE;IACL,IAAI,CAAC,WAAW;QAAE,OAAO,EAAE,GAAG,UAAU,EAAE,CAAC;IAE3C,OAAO;QACL,GAAG,UAAU;QACb,GAAI,MAAM,CAAC,WAAW,CACpB,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAClD;KACjB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAC/C,IAAS,EACT,IAAS,EACT,KAA8B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,EAC1C,EAAE;IACP,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACzB,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;YAClD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;IACH,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,+FAA+F;AAC/F,MAAM,CAAC,MAAM,GAAG,GACd,OAAO,OAAO,KAAK,WAAW;IAC5B,CAAC,CAAC;QACE,+BAA+B,EAC7B,OAAO,CAAC,GAAG,CAAC,+BAA+B;KAC9C;IACH,CAAC,CAAC,EAAE,CAAC;AAET,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,KAAc,EAAsB,EAAE;IACjE,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;QAC3B,OAAO,KAAK,CAAC,OAAO,CAAC;IACvB,CAAC;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,IAAY,EAAiB,EAAE;IACvD,MAAM,GAAG,GACP,OAAO,UAAU,CAAC,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC;IAC1E,IAAI,CAAC,GAAG;QAAE,OAAO,IAAI,CAAC;IACtB,MAAM,KAAK,GAAG,KAAK,GAAG,CAAC,MAAM,EAAE,CAAC;IAChC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;IACxC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IACpC,OAAO,KAAK,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC;AACjD,CAAC,CAAC","sourcesContent":["/**\n * Merges two objects, using values from the override object only when they are not null or undefined.\n * Values from the override object will replace values from the default object only if they exist and are not null.\n *\n * @param defaultObj The default object to use as a base\n * @param overrideObj The object containing override values\n * @returns A new object with merged values\n */\nexport const mergeWithDefault = <T extends object>(\n  defaultObj: T,\n  overrideObj?: Partial<T>,\n): T => {\n  if (!overrideObj) return { ...defaultObj };\n\n  return {\n    ...defaultObj,\n    ...(Object.fromEntries(\n      Object.entries(overrideObj).filter(([, value]) => value != null),\n    ) as Partial<T>),\n  };\n};\n\nexport const mergeObjectArrayWithoutDuplicates = <T extends object>(\n  arr1: T[],\n  arr2: T[],\n  eq: (a: T, b: T) => boolean = (a, b) => a === b,\n): T[] => {\n  const merged = [...arr1];\n  for (const obj of arr2) {\n    if (!merged.some((existing) => eq(existing, obj))) {\n      merged.push(obj);\n    }\n  }\n  return merged;\n};\n\n// Ensure the sdk works in browser environments where `process` does not exist (e.g. vite apps)\nexport const env =\n  typeof process !== \"undefined\"\n    ? {\n        NEXT_PUBLIC_WALLET_API_BASE_URL:\n          process.env.NEXT_PUBLIC_WALLET_API_BASE_URL,\n      }\n    : {};\n\nexport const errorMessage = (error: unknown): string | undefined => {\n  if (error instanceof Error) {\n    return error.message;\n  }\n  if (typeof error === \"string\") {\n    return error;\n  }\n  return undefined;\n};\n\nexport const getCookie = (name: string): string | null => {\n  const doc =\n    typeof globalThis.document === \"undefined\" ? null : globalThis.document;\n  if (!doc) return null;\n  const value = `; ${doc.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length !== 2) return null;\n  return parts.pop()?.split(\";\").shift() ?? null;\n};\n"]}