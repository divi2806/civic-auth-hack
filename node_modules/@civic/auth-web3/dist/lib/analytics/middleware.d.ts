/**
 * Analytics middleware to provide a unified approach to analytics across different chains
 */
import type { CivicAuthWeb3EventType } from "./types.js";
/**
 * Wraps a function with analytics tracking, handling both success and error cases
 * This can be used by any chain implementation
 *
 * @param fn The function to wrap
 * @param eventType The type of event to track
 * @param target Optional target identifier (e.g., "ethereum", "solana")
 * @param analyticsParams Optional parameters to include in the analytics event
 * @returns The wrapped function
 */
export declare function withAnalytics<Args extends unknown[], R>(fn: (...args: Args) => Promise<R>, eventType: CivicAuthWeb3EventType, target?: string, analyticsParams?: readonly unknown[]): (...args: Args) => Promise<R>;
//# sourceMappingURL=middleware.d.ts.map