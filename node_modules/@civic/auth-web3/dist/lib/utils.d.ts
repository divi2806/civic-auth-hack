/**
 * Merges two objects, using values from the override object only when they are not null or undefined.
 * Values from the override object will replace values from the default object only if they exist and are not null.
 *
 * @param defaultObj The default object to use as a base
 * @param overrideObj The object containing override values
 * @returns A new object with merged values
 */
export declare const mergeWithDefault: <T extends object>(defaultObj: T, overrideObj?: Partial<T>) => T;
export declare const mergeObjectArrayWithoutDuplicates: <T extends object>(arr1: T[], arr2: T[], eq?: (a: T, b: T) => boolean) => T[];
export declare const env: {
    NEXT_PUBLIC_WALLET_API_BASE_URL: string | undefined;
} | {
    NEXT_PUBLIC_WALLET_API_BASE_URL?: undefined;
};
export declare const errorMessage: (error: unknown) => string | undefined;
export declare const getCookie: (name: string) => string | null;
//# sourceMappingURL=utils.d.ts.map