{"version":3,"file":"utils.test.js","sourceRoot":"","sources":["../../src/lib/utils.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { describe, it, expect, vi, beforeEach } from \"vitest\";\nimport { errorMessage, mergeWithDefault, getCookie } from \"./utils.js\";\n\ndescribe(\"mergeWithDefault\", () => {\n  it(\"should return default object when override is undefined\", () => {\n    const defaultObj = { a: 1, b: 2 };\n    const result = mergeWithDefault(defaultObj, undefined);\n    expect(result).toStrictEqual(defaultObj);\n  });\n\n  it(\"should merge objects keeping non-null values from override\", () => {\n    const defaultObj = { a: 1, b: 2, c: 3 };\n    const overrideObj = { a: 4, b: undefined, c: undefined };\n    const result = mergeWithDefault(defaultObj, overrideObj);\n    expect(result).toStrictEqual({ a: 4, b: 2, c: 3 });\n  });\n\n  it(\"should handle empty override object\", () => {\n    const defaultObj = { a: 1, b: 2 };\n    const overrideObj = {};\n    const result = mergeWithDefault(defaultObj, overrideObj);\n    expect(result).toStrictEqual(defaultObj);\n  });\n\n  it(\"should handle complex nested objects\", () => {\n    const defaultObj = {\n      a: 1,\n      nested: { x: 1, y: 2 },\n    };\n    const overrideObj = {\n      a: undefined,\n      nested: { x: 3, y: 4 },\n    };\n    const result = mergeWithDefault(defaultObj, overrideObj);\n    // Note: Nested objects are replaced entirely, not merged deeply\n    expect(result).toStrictEqual({\n      a: 1,\n      nested: { x: 3, y: 4 },\n    });\n  });\n});\n\ndescribe(\"errorMessage\", () => {\n  it(\"should return the message from an Error object\", () => {\n    const error = new Error(\"Test error message\");\n    expect(errorMessage(error)).toBe(\"Test error message\");\n  });\n\n  it(\"should return the string if error is a string\", () => {\n    expect(errorMessage(\"String error message\")).toBe(\"String error message\");\n  });\n\n  it(\"should return undefined for non-string, non-error values\", () => {\n    expect(errorMessage(42)).toBeUndefined();\n    expect(errorMessage(null)).toBeUndefined();\n    expect(errorMessage({})).toBeUndefined();\n    expect(errorMessage(undefined)).toBeUndefined();\n  });\n});\n\ndescribe(\"getCookie\", () => {\n  beforeEach(() => {\n    const mockDocument = {\n      cookie: \"testCookie=testValue; otherCookie=otherValue\",\n    };\n    vi.stubGlobal(\"document\", mockDocument);\n  });\n  it(\"should get existing cookie value\", () => {\n    expect(getCookie(\"testCookie\")).toBe(\"testValue\");\n  });\n\n  it(\"should return null for non-existent cookie\", () => {\n    expect(getCookie(\"nonExistentCookie\")).toBe(null);\n  });\n\n  it(\"should handle multiple cookies with similar names\", () => {\n    vi.stubGlobal(\"document\", {\n      cookie: \"test=value1; testCookie=value2; testCookieExtra=value3\",\n    });\n\n    expect(getCookie(\"testCookie\")).toBe(\"value2\");\n  });\n\n  it(\"should handle cookies with special characters\", () => {\n    vi.stubGlobal(\"document\", {\n      cookie: \"testCookie=value%20with%20spaces; otherCookie=value\",\n    });\n\n    expect(getCookie(\"testCookie\")).toBe(\"value%20with%20spaces\");\n  });\n\n  it(\"should return null when document is undefined\", () => {\n    vi.stubGlobal(\"document\", undefined);\n\n    expect(getCookie(\"testCookie\")).toBe(null);\n  });\n\n  it(\"should handle empty cookie string\", () => {\n    vi.stubGlobal(\"document\", { cookie: \"\" });\n\n    expect(getCookie(\"testCookie\")).toBe(null);\n  });\n\n  it(\"should handle cookies with equals signs in the value\", () => {\n    vi.stubGlobal(\"document\", {\n      cookie: \"testCookie=key=value; otherCookie=value\",\n    });\n\n    expect(getCookie(\"testCookie\")).toBe(\"key=value\");\n  });\n\n  it(\"should handle cookies with no value\", () => {\n    vi.stubGlobal(\"document\", {\n      cookie: \"testCookie=; otherCookie=value\",\n    });\n\n    expect(getCookie(\"testCookie\")).toBe(\"\");\n  });\n});\n"]}