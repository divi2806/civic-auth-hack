{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../src/lib/ethereum/index.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAElD,OAAO,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,MAAM,YAAY,CAAC;AAE7E,mDAAmD;AACnD,MAAM,qBAAqB;IACzB,OAAO,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;CAChD;AAED,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,gFAAgF,EAAE,GAAG,EAAE;QACxF,MAAM,mBAAmB,GAAG,IAAI,qBAAqB,EAAE,CAAC;QACxD,MAAM,aAAa,GAAG,mBAAmB,CAAC,mBAAmB,CAAC,CAAC;QAE/D,MAAM,CAAC,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,MAAM,CAAC,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,aAAa,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7D,2CAA2C;QAC3C,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,uBAAuB,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAC;YAC3D,MAAM,EAAE,uBAAuB;SAChC,CAAC,CAAC;QAEH,oDAAoD;QACpD,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;QACjD,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC;YACvD,MAAM,EAAE,aAAa;SACtB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;QAC1D,MAAM,YAAY,GAAG,0BAA0B,EAAE,CAAC;QAElD,gBAAgB;QAChB,MAAM,CAAC,OAAO,YAAY,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/D,MAAM,CAAC,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEnD,4BAA4B;QAC5B,MAAM,CAAC,OAAO,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,MAAM,CAAC,OAAO,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE5D,wBAAwB;QACxB,MAAM,CAAC,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;QACvE,MAAM,YAAY,GAAG,0BAA0B,EAAE,CAAC;QAClD,MAAM,YAAY,GAAG,mBAAmB,CAAC,IAAI,qBAAqB,EAAE,CAAC,CAAC;QAEtE,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,YAAY,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;QAC7C,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,YAAY,GAAG,0BAA0B,EAAE,CAAC;QAClD,MAAM,kBAAkB,GAAG,IAAI,qBAAqB,EAAE,CAAC;QACvD,MAAM,aAAa,GAAG,mBAAmB,CAAC,kBAAkB,CAAC,CAAC;QAE9D,YAAY,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAE9C,EAAE,CAAC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;QAE5E,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;QAErE,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACpC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC;YACtD,MAAM,EAAE,aAAa;SACtB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, it, expect, vi } from \"vitest\";\nimport type { GenericEthereumProvider } from \"../../types.js\";\nimport { createTypedProvider, createLazyEthereumProvider } from \"./index.js\";\n\n// Stub an underlying provider, recording all calls\nclass StubRecordingProvider implements GenericEthereumProvider {\n  request = vi.fn().mockResolvedValue(undefined);\n}\n\ndescribe(\"createTypedProvider\", () => {\n  it(\"should create a provider with EIP-1193, EIP-1474, EIP-2255, and event handling\", () => {\n    const stubeip1474Provider = new StubRecordingProvider();\n    const typedProvider = createTypedProvider(stubeip1474Provider);\n\n    expect(typeof typedProvider.request).toBe(\"function\");\n    expect(typeof typedProvider.on).toBe(\"function\");\n    expect(typeof typedProvider.removeListener).toBe(\"function\");\n\n    // sends EIP-2255 methods to the 2255 mixin\n    typedProvider.request({ method: \"wallet_getPermissions\" });\n    expect(stubeip1474Provider.request).not.toHaveBeenCalledWith({\n      method: \"wallet_getPermissions\",\n    });\n\n    // sends EIP-1474 methods to the underlying provider\n    typedProvider.request({ method: \"eth_chainId\" });\n    expect(stubeip1474Provider.request).toHaveBeenCalledWith({\n      method: \"eth_chainId\",\n    });\n  });\n});\n\ndescribe(\"createLazyProvider\", () => {\n  it(\"should create a lazy provider with known methods\", () => {\n    const lazyProvider = createLazyEthereumProvider();\n\n    // proxy methods\n    expect(typeof lazyProvider.setImplementation).toBe(\"function\");\n    expect(typeof lazyProvider.ready).toBe(\"function\");\n\n    // event registrar methods (\n    expect(typeof lazyProvider.on).toBe(\"function\");\n    expect(typeof lazyProvider.removeListener).toBe(\"function\");\n\n    // other EIP1193 methods\n    expect(typeof lazyProvider.request).toBe(\"function\");\n  });\n\n  it(\"should defer implementation until setImplementation is called\", () => {\n    const lazyProvider = createLazyEthereumProvider();\n    const mockProvider = createTypedProvider(new StubRecordingProvider());\n\n    expect(lazyProvider.ready()).toBe(false);\n    lazyProvider.setImplementation(mockProvider);\n    expect(lazyProvider.ready()).toBe(true);\n  });\n\n  it(\"should forward calls after implementation is set\", async () => {\n    const lazyProvider = createLazyEthereumProvider();\n    const underlyingProvider = new StubRecordingProvider();\n    const typedProvider = createTypedProvider(underlyingProvider);\n\n    lazyProvider.setImplementation(typedProvider);\n\n    vi.mocked(underlyingProvider.request).mockResolvedValueOnce(\"mockResponse\");\n\n    const result = await lazyProvider.request({ method: \"eth_chainId\" });\n\n    expect(result).toBe(\"mockResponse\");\n    expect(underlyingProvider.request).toHaveBeenCalledWith({\n      method: \"eth_chainId\",\n    });\n  });\n});\n"]}