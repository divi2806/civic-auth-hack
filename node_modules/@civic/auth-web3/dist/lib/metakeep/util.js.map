{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../src/lib/metakeep/util.ts"],"names":[],"mappings":"AAGA;;;GAGG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,YAA6B,EACL,EAAE;IAC1B,MAAM,OAAO,GAA2B,EAAE,CAAC;IAC3C,KAAK,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC;QAC3D,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import type { EVMChainRpcUrls } from \"../../types.js\";\nimport type { WalletResponse } from \"./civicApiClient.js\";\n\n/**\n * Given a set of RPC urls, extract the first http url for each chain\n * @param chainRpcUrls\n */\nexport const toMetakeepRpcUrls = (\n  chainRpcUrls: EVMChainRpcUrls,\n): Record<number, string> => {\n  const rpcUrls: Record<number, string> = {};\n  for (const [chainId, urls] of Object.entries(chainRpcUrls)) {\n    rpcUrls[parseInt(chainId)] = urls.http[0];\n  }\n  return rpcUrls;\n};\n\nexport type MetakeepConfig = WalletResponse[\"config\"][\"metakeep\"];\n"]}