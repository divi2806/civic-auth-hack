import type { SolanaWeb3Client } from "../../solana/SolanaWeb3Client.js";
import MetakeepSDK from "metakeep";
import { MetakeepSolanaWalletAdapter } from "./MetakeepSolanaWalletAdapter.js";
import { type MetakeepConfig } from "../util.js";
import type { CivicWeb3ClientConfig, UserDetails } from "../../../types.js";
import type { User } from "@civic/auth";
import type { Connection } from "@solana/web3.js";
export declare class MetakeepSolanaWeb3Client implements SolanaWeb3Client {
    private config;
    private user;
    readonly address: string;
    wallet: MetakeepSolanaWalletAdapter;
    sdk: MetakeepSDK.MetaKeep;
    constructor(config: CivicWeb3ClientConfig & {
        metakeep: MetakeepConfig;
        solanaConnection?: Connection;
    }, user: User<UserDetails>, address: string);
    private init;
    disconnect(): Promise<void>;
    static build(config: CivicWeb3ClientConfig & {
        metakeep: MetakeepConfig;
        solanaConnection?: Connection;
    }, user: User<UserDetails>, address: string): Promise<SolanaWeb3Client>;
}
//# sourceMappingURL=MetakeepSolanaWeb3Client.d.ts.map