{"version":3,"file":"account.js","sourceRoot":"","sources":["../../../../src/lib/solana/walletAdapter/account.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAEhE,OAAO,EACL,4BAA4B,EAC5B,iBAAiB,EACjB,qBAAqB,GACtB,MAAM,kCAAkC,CAAC;AAE1C,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAE5C,MAAM,MAAM,GAAG,aAAa,CAAC;AAC7B,MAAM,QAAQ,GAAG;IACf,4BAA4B;IAC5B,qBAAqB;IACrB,iBAAiB;CACT,CAAC;AAEX,MAAM,OAAO,kBAAkB;IACpB,QAAQ,CAA2B;IACnC,UAAU,CAA6B;IACvC,OAAO,CAA0B;IACjC,SAAS,CAA4B;IACrC,MAAM,CAAyB;IAC/B,KAAK,CAAwB;IAEtC,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IACjC,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,YAAY,EACV,OAAO,EACP,SAAS,EACT,KAAK,EACL,IAAI,GACuC;QAC3C,IAAI,GAAG,CAAC,MAAM,KAAK,kBAAkB,EAAE,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;CACF","sourcesContent":["// This is copied with modification from @wallet-standard/wallet\n\nimport {\n  SolanaSignAndSendTransaction,\n  SolanaSignMessage,\n  SolanaSignTransaction,\n} from \"@solana/wallet-standard-features\";\nimport type { WalletAccount } from \"@wallet-standard/base\";\nimport { SOLANA_CHAINS } from \"./solana.js\";\n\nconst chains = SOLANA_CHAINS;\nconst features = [\n  SolanaSignAndSendTransaction,\n  SolanaSignTransaction,\n  SolanaSignMessage,\n] as const;\n\nexport class CivicWalletAccount implements WalletAccount {\n  readonly #address: WalletAccount[\"address\"];\n  readonly #publicKey: WalletAccount[\"publicKey\"];\n  readonly #chains: WalletAccount[\"chains\"];\n  readonly #features: WalletAccount[\"features\"];\n  readonly #label: WalletAccount[\"label\"];\n  readonly #icon: WalletAccount[\"icon\"];\n\n  get address() {\n    return this.#address;\n  }\n\n  get publicKey() {\n    return this.#publicKey.slice();\n  }\n\n  get chains() {\n    return this.#chains.slice();\n  }\n\n  get features() {\n    return this.#features.slice();\n  }\n\n  get label() {\n    return this.#label;\n  }\n\n  get icon() {\n    return this.#icon;\n  }\n\n  constructor({\n    address,\n    publicKey,\n    label,\n    icon,\n  }: Omit<WalletAccount, \"chains\" | \"features\">) {\n    if (new.target === CivicWalletAccount) {\n      Object.freeze(this);\n    }\n\n    this.#address = address;\n    this.#publicKey = publicKey;\n    this.#chains = chains;\n    this.#features = features;\n    this.#label = label;\n    this.#icon = icon;\n  }\n}\n"]}