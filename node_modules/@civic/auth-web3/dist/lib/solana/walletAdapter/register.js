// This is copied from @wallet-standard/wallet
export function registerWallet(wallet) {
    const callback = ({ register }) => register(wallet);
    if (typeof window === "undefined" || !window.dispatchEvent) {
        return;
    }
    try {
        window.dispatchEvent(new RegisterWalletEvent(callback));
    }
    catch (error) {
        console.error("wallet-standard:register-wallet event could not be dispatched\n", error);
    }
    try {
        window.addEventListener("wallet-standard:app-ready", ({ detail: api }) => callback(api));
    }
    catch (error) {
        console.error("wallet-standard:app-ready event listener could not be added\n", error);
    }
}
export class RegisterWalletEvent extends Event {
    #detail;
    get detail() {
        return this.#detail;
    }
    get type() {
        return "wallet-standard:register-wallet";
    }
    constructor(callback) {
        super("wallet-standard:register-wallet", {
            bubbles: false,
            cancelable: false,
            composed: false,
        });
        this.#detail = callback;
    }
    /** @deprecated */
    preventDefault() {
        throw new Error("preventDefault cannot be called");
    }
    /** @deprecated */
    stopImmediatePropagation() {
        throw new Error("stopImmediatePropagation cannot be called");
    }
    /** @deprecated */
    stopPropagation() {
        throw new Error("stopPropagation cannot be called");
    }
}
/** @deprecated */
export function DEPRECATED_registerWallet(wallet) {
    registerWallet(wallet);
    try {
        (window.navigator.wallets ||= []).push(({ register }) => register(wallet));
    }
    catch (error) {
        console.error("window.navigator.wallets could not be pushed\n", error);
    }
}
//# sourceMappingURL=register.js.map