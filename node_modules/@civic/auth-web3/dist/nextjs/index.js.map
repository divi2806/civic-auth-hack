{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/nextjs/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAElD,YAAY,EAAE,CAAC;AACf,OAAO,EACL,qBAAqB,IAAI,uBAAuB,EAChD,mBAAmB,EACnB,iBAAiB,GAClB,MAAM,oBAAoB,CAAC;AAI5B,OAAO,EACL,mBAAmB,EACnB,OAAO,EACP,iBAAiB,GAClB,MAAM,oBAAoB,CAAC;AAM5B,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EACL,aAAa,IAAI,qBAAqB,EACtC,UAAU,IAAI,kBAAkB,EAChC,OAAO,IAAI,aAAa,GACzB,MAAM,wBAAwB,CAAC;AAMhC,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AAE9E,OAAO,EAAE,8BAA8B,EAAE,MAAM,oBAAoB,CAAC;AAEpE,MAAM,aAAa,GAAG,GAAG,EAAE;IACzB,MAAM,UAAU,GAAG,iBAAiB,EAAE,CAAC;IACvC,OAAO;QACL,GAAG,UAAU;QACb,WAAW,EAAE,UAAU,CAAC,WAAW;KACpC,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,OAAO,GAAG,KAAK,EAC1B,SAAgC,EAAE,EACT,EAAE;IAC3B,MAAM,eAAe,GAAG,MAAM,UAAU,EAAE,CAAC;IAC3C,IAAI,CAAC,eAAe;QAAE,OAAO,IAAI,CAAC;IAElC,OAAO,aAAa,CAAI,MAAM,EAAE,IAAI,mBAAmB,EAAE,EAAE,aAAa,EAAE,CAAC,CAAC;AAC9E,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,SAAgC,EAAE,EAAE,EAAE;IACxE,MAAM,eAAe,GAAG,MAAM,UAAU,EAAE,CAAC;IAC3C,IAAI,CAAC,eAAe;QAAE,OAAO,IAAI,CAAC;IAClC,OAAO,qBAAqB,CAC1B,MAAM,EACN,IAAI,mBAAmB,EAAE,EACzB,aAAa,EAAE,CAChB,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAC7B,SAAgC,EAAE,EACE,EAAE;IACtC,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC;IACnC,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IACvB,OAAO,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1C,CAAC,CAAC;AAMF,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,UAA0B,EACiB,EAAE;IAC7C,MAAM,UAAU,GAAG,uBAAuB,CAAC;QACzC,OAAO,EAAE;YACP,MAAM,EAAE;gBACN,QAAQ,EAAE;oBACR,QAAQ,EAAE,KAAK;iBAChB;aACF;SACF;QACD,GAAG,UAAU;KACd,CAAC,CAAC;IAEH,OAAO,CAAC,UAAU,GAAG,EAAE,EAAE,EAAE;QACzB,8BAA8B;QAC9B,MAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QAExC,qCAAqC;QACrC,OAAO,8BAA8B,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC9D,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { printVersion } from \"../shared/index.js\";\n\nprintVersion();\nimport {\n  createCivicAuthPlugin as internalCivicAuthPlugin,\n  NextjsCookieStorage,\n  resolveAuthConfig,\n} from \"@civic/auth/nextjs\";\nimport type { AuthConfig } from \"@civic/auth/nextjs\";\nimport type { NextConfig } from \"next\";\n\nexport {\n  NextjsCookieStorage,\n  handler,\n  defaultAuthConfig,\n} from \"@civic/auth/nextjs\";\nexport type {\n  AuthConfig,\n  CookiesConfigObject,\n  AuthConfigWithDefaults,\n} from \"@civic/auth/nextjs\";\nexport { CivicAuthProvider } from \"./CivicAuthProvider.js\";\nimport { isLoggedIn } from \"@civic/auth/nextjs\";\nimport {\n  createWallets as createWalletsInternal,\n  getWallets as getWalletsInternal,\n  getUser as getUserShared,\n} from \"../server/functions.js\";\nimport type {\n  CivicWeb3ClientConfig,\n  GetWalletsResponse,\n  UserDetailsWithAuth,\n} from \"../types.js\";\nexport { getTokens, isLoggedIn, resolveAuthConfig } from \"@civic/auth/nextjs\";\nimport type { User } from \"@civic/auth\";\nimport { withOptionalSolanaDependencies } from \"./webpackPlugin.js\";\n\nconst getAuthConfig = () => {\n  const authConfig = resolveAuthConfig();\n  return {\n    ...authConfig,\n    redirectUrl: authConfig.callbackUrl,\n  };\n};\nexport const getUser = async <T extends UserDetailsWithAuth>(\n  config: CivicWeb3ClientConfig = {},\n): Promise<User<T> | null> => {\n  const hasValidSession = await isLoggedIn();\n  if (!hasValidSession) return null;\n\n  return getUserShared<T>(config, new NextjsCookieStorage(), getAuthConfig());\n};\n\nexport const createWallets = async (config: CivicWeb3ClientConfig = {}) => {\n  const hasValidSession = await isLoggedIn();\n  if (!hasValidSession) return null;\n  return createWalletsInternal(\n    config,\n    new NextjsCookieStorage(),\n    getAuthConfig(),\n  );\n};\nexport const getWallets = async (\n  config: CivicWeb3ClientConfig = {},\n): Promise<GetWalletsResponse | null> => {\n  const user = await getUser(config);\n  if (!user) return null;\n  return getWalletsInternal(user, config);\n};\n\nexport type Web3AuthConfig = AuthConfig & {\n  enableSolanaWalletAdapter?: boolean;\n};\n\nexport const createCivicAuthPlugin = (\n  authConfig: Web3AuthConfig,\n): ((nextConfig?: NextConfig) => NextConfig) => {\n  const authPlugin = internalCivicAuthPlugin({\n    cookies: {\n      tokens: {\n        id_token: {\n          httpOnly: false,\n        },\n      },\n    },\n    ...authConfig,\n  });\n\n  return (nextConfig = {}) => {\n    // Apply the civic auth plugin\n    const withAuth = authPlugin(nextConfig);\n\n    // Apply the Solana dependency plugin\n    return withOptionalSolanaDependencies(withAuth, authConfig);\n  };\n};\n"]}