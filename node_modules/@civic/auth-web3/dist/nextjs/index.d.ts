import type { AuthConfig } from "@civic/auth/nextjs";
import type { NextConfig } from "next";
export { NextjsCookieStorage, handler, defaultAuthConfig, } from "@civic/auth/nextjs";
export type { AuthConfig, CookiesConfigObject, AuthConfigWithDefaults, } from "@civic/auth/nextjs";
export { CivicAuthProvider } from "./CivicAuthProvider.js";
import type { CivicWeb3ClientConfig, GetWalletsResponse, UserDetailsWithAuth } from "../types.js";
export { getTokens, isLoggedIn, resolveAuthConfig } from "@civic/auth/nextjs";
import type { User } from "@civic/auth";
export declare const getUser: <T extends UserDetailsWithAuth>(config?: CivicWeb3ClientConfig) => Promise<User<T> | null>;
export declare const createWallets: (config?: CivicWeb3ClientConfig) => Promise<import("../types.js").SparseWallet[] | null>;
export declare const getWallets: (config?: CivicWeb3ClientConfig) => Promise<GetWalletsResponse | null>;
export type Web3AuthConfig = AuthConfig & {
    enableSolanaWalletAdapter?: boolean;
};
export declare const createCivicAuthPlugin: (authConfig: Web3AuthConfig) => ((nextConfig?: NextConfig) => NextConfig);
//# sourceMappingURL=index.d.ts.map