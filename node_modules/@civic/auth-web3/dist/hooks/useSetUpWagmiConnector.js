import { useConnectors, useDisconnect } from "wagmi";
import { useEffect } from "react";
import { logger } from "../lib/logger.js";
const isLazyConnector = (connector) => "setProvider" in connector;
// find the embedded wallet connector, and, if it exists, pass the ethereum provider from the web3Client to it.
// This allows us to register a wallet connector outside of the react context using wagmi createConfig.
export const useSetUpWagmiConnector = (web3Client, createWalletFinished) => {
    const wagmiConnectors = useConnectors();
    const { disconnect } = useDisconnect();
    const connector = wagmiConnectors.find(isLazyConnector);
    useEffect(() => {
        logger.web3.wagmi.debug("useSetUpWagmiConnector ", {
            connector,
            web3Client,
        });
        if (connector && web3Client?.provider) {
            logger.web3.wagmi.debug("Setting ethereum provider on connector");
            connector.setProvider(web3Client.provider);
            web3Client.provider.on("disconnect", () => {
                disconnect({
                    connector,
                });
            });
        }
    }, [connector, web3Client?.provider, createWalletFinished]);
    return connector;
};
//# sourceMappingURL=useSetUpWagmiConnector.js.map