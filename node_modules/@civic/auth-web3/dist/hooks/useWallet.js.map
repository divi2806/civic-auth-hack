{"version":3,"file":"useWallet.js","sourceRoot":"","sources":["../../src/hooks/useWallet.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,mCAAmC,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAGtD,MAAM,CAAC,MAAM,SAAS,GAAG,CAAsB,EAC7C,IAAI,GAGL,EAGC,EAAE;IACF,MAAM,WAAW,GAAG,OAAO,EAAE,CAAC;IAC9B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC;QAChC,OAAO;YACL,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,SAAS;SACnB,CAAC;IACJ,CAAC;IACD,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;AAC3B,CAAC,CAAC","sourcesContent":["import { useUser } from \"../components/Web3UserProvider.js\";\nimport { userHasWallet } from \"../lib/walletUtils.js\";\nimport type { ChainType, Wallets } from \"../types.js\";\n\nexport const useWallet = <T extends ChainType>({\n  type,\n}: {\n  type: T;\n}): {\n  address: Wallets[T][\"address\"] | undefined;\n  wallet: Wallets[T][\"wallet\"] | undefined;\n} => {\n  const userContext = useUser();\n  if (!userHasWallet(userContext)) {\n    return {\n      wallet: undefined,\n      address: undefined,\n    };\n  }\n  return userContext[type];\n};\n"]}