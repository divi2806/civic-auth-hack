{"version":3,"file":"useWalletOptionalFallback.js","sourceRoot":"","sources":["../../../src/hooks/metakeep/useWalletOptionalFallback.ts"],"names":[],"mappings":"AAAA,iEAAiE;AACjE,8FAA8F;AAC9F,iEAAiE;AAGjE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAElD,MAAM,gBAAgB,GAAG,KAAK,IAAI,EAAE;IAClC,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;AACtC,CAAC,CAAC;AACF,MAAM,WAAW,GAAG,KAAK,IAAI,EAAE,GAAE,CAAC,CAAC;AAEnC,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,MAAM,EAAE,IAAI;IACZ,WAAW,EAAE,KAAK;IAClB,SAAS,EAAE,KAAK;IAChB,SAAS,EAAE,IAAI;IACf,OAAO,EAAE,EAAE;IACX,UAAU,EAAE,KAAK;IACjB,aAAa,EAAE,KAAK;IACpB,eAAe,EAAE,gBAAgB;IACjC,eAAe,EAAE,gBAAgB;IACjC,mBAAmB,EAAE,gBAAgB;IACrC,WAAW,EAAE,gBAAgB;IAC7B,MAAM,EAAE,gBAAgB;IACxB,MAAM,EAAE,GAAG,EAAE,GAAE,CAAC;IAChB,OAAO,EAAE,WAAW;IACpB,UAAU,EAAE,WAAW;CACxB,CAAC;AAEF,MAAM,qBAAqB,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC;AAE5D,MAAM,CAAC,MAAM,iBAAiB,GAA6B,GAAG,EAAE,CAC9D,UAAU,CAAC,qBAAqB,CAAC,CAAC","sourcesContent":["// --------------------------------------------------------------\n// Fallback that returns a dummy wallet hook, used if the solana wallet adapter is not present\n// --------------------------------------------------------------\n\nimport type { WalletContextState } from \"@solana/wallet-adapter-react\";\nimport { createContext, useContext } from \"react\";\n\nconst notFoundFunction = async () => {\n  throw new Error(\"Wallet not found\");\n};\nconst noopPromise = async () => {};\n\nexport const walletFallback = {\n  wallet: null,\n  autoConnect: false,\n  connected: false,\n  publicKey: null,\n  wallets: [],\n  connecting: false,\n  disconnecting: false,\n  sendTransaction: notFoundFunction,\n  signTransaction: notFoundFunction,\n  signAllTransactions: notFoundFunction,\n  signMessage: notFoundFunction,\n  signIn: notFoundFunction,\n  select: () => {},\n  connect: noopPromise,\n  disconnect: noopPromise,\n};\n\nconst WalletFallbackContext = createContext(walletFallback);\n\nexport const useWalletInternal: () => WalletContextState = () =>\n  useContext(WalletFallbackContext);\n"]}