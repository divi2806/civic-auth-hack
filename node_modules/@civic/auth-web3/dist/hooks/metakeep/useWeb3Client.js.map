{"version":3,"file":"useWeb3Client.js","sourceRoot":"","sources":["../../../src/hooks/metakeep/useWeb3Client.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,IAAI,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAE/D,OAAO,EAAmB,UAAU,EAAE,MAAM,yBAAyB,CAAC;AACtE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAE,MAAM,0CAA0C,CAAC;AAC9E,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAE3D,6FAA6F;AAC7F,4EAA4E;AAC5E,wCAAwC;AACxC,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,MAA8B,EAC9B,YAAyB,EACN,EAAE;IACrB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,eAAe,EAAe,CAAC;IACzD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAoB,IAAI,CAAC,CAAC;IACtE,MAAM,SAAS,GAAG,MAAM,EAA6C,CAAC;IACtE,qDAAqD;IACrD,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,SAAS,CAAC,uBAAuB,CAAC,CAAC;IACxD,MAAM,EAAE,UAAU,EAAE,GAAG,qBAAqB,EAAE,CAAC;IAC/C,MAAM,MAAM,GAAG,iBAAiB,EAAE,CAAC;IAEnC,SAAS,CAAC,GAAG,EAAE;QACb,KAAK,UAAU,UAAU;YACvB,IAAI,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,OAAO;gBAAE,OAAO,IAAI,CAAC;YAC1C,MAAM,YAAY,GAAG,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,CAAC;YAC1C,MAAM,eAAe,GAAG;gBACtB,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC;gBACjB,gBAAgB,EAAE,UAAU;aAC7B,CAAC;YACF,IAAI,UAAU,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CACT,kGAAkG,CACnG,CAAC;YACJ,CAAC;YAED,MAAM,YAAY,GAAG,KAAK,IAAI,EAAE;gBAC9B,YAAY,EAAE,EAAE,CAAC;gBACjB,6DAA6D;gBAC7D,iHAAiH;gBACjH,MAAM,MAAM,EAAE,UAAU,EAAE,CAAC;YAC7B,CAAC,CAAC;YAEF,OAAO,kBAAkB,CAAC,KAAK,CAC7B,eAAe,EACf,YAAY,EACZ,YAAY,CACb,CAAC;QACJ,CAAC;QAED;QACE,gEAAgE;QAChE,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM;YAC1B,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,EAAE,EAAE;YACjC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;YACtC,uCAAuC;YACvC,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,wCAAwC;YACzD,CAAC,CAAC,OAAO,IAAI,qDAAqD;YAClE,CAAC,aAAa,CAAC,OAAO,CAAC,0BAA0B;UACjD,CAAC;YACD,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC;YAC7B,UAAU,EAAE;iBACT,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACf,IAAI,MAAM,EAAE,CAAC;oBACX,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;oBACzD,SAAS,CAAC,OAAO,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;oBAC5C,aAAa,CAAC,MAAM,CAAC,CAAC;oBACtB,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC;iBACD,OAAO,CAAC,GAAG,EAAE;gBACZ,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC;QACD,oEAAoE;QACpE,8FAA8F;IAChG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;IAErD,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC","sourcesContent":["import { useUser as useUserInternal } from \"@civic/auth/react\";\nimport type { CivicWeb3ClientConfig, UserDetails } from \"../../types.js\";\nimport { type Web3Client, web3Events } from \"../../lib/Web3Client.js\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useCookie } from \"../useCookie.js\";\nimport { logger } from \"../../lib/logger.js\";\nimport { MetakeepWeb3Client } from \"../../lib/metakeep/MetakeepWeb3Client.js\";\nimport { useConnectionInternal } from \"./useConnectionOptional.js\";\nimport { useWalletInternal } from \"./useWalletOptional.js\";\n\n// This hook returns a web3client object that can be used to interact with the user's wallet.\n// Web3Client is a generic interface for embedded wallets provided by civic,\n// This hook creates a metakeep version.\nexport const useWeb3Client = (\n  config?: CivicWeb3ClientConfig,\n  onSessionEnd?: () => void,\n): Web3Client | null => {\n  const { user, idToken } = useUserInternal<UserDetails>();\n  const [web3Client, setWeb3Client] = useState<Web3Client | null>(null);\n  const clientRef = useRef<{ client: Web3Client; id: string } | null>();\n  // Track build in progress to avoid creating multiple\n  const isBuildingRef = useRef(false);\n  const walletCookie = useCookie(\"civic-embedded-wallet\");\n  const { connection } = useConnectionInternal();\n  const wallet = useWalletInternal();\n\n  useEffect(() => {\n    async function loadClient(): Promise<Web3Client | null> {\n      if (!user?.email || !idToken) return null;\n      const userWithAuth = { ...user, idToken };\n      const augmentedConfig = {\n        ...(config ?? {}),\n        solanaConnection: connection,\n      };\n      if (connection) {\n        console.log(\n          \"Solana connection found in context - using it to register wallet with the solana wallet standard\",\n        );\n      }\n\n      const onDisconnect = async () => {\n        onSessionEnd?.();\n        // if using the solana wallet adapter, disconnect the wallet.\n        // Note - this has to happen via the walletContext, calling disconnect on the wallet itself will not clear the UI\n        await wallet?.disconnect();\n      };\n\n      return MetakeepWeb3Client.build(\n        augmentedConfig,\n        userWithAuth,\n        onDisconnect,\n      );\n    }\n\n    if (\n      // prevent building if the client is already built for this user\n      (!clientRef?.current?.client ||\n        clientRef.current.id !== user?.id ||\n        !clientRef.current.client.connected) &&\n      // Fields required for embedded wallets\n      !!user?.email && // used by Metakeep to identify the user\n      !!idToken && // used by the Civic backend to authenticate the user\n      !isBuildingRef.current // prevent multiple builds\n    ) {\n      isBuildingRef.current = true;\n      loadClient()\n        .then((client) => {\n          if (client) {\n            logger.web3.metakeep.debug(\"Web3Client created\", client);\n            clientRef.current = { client, id: user.id };\n            setWeb3Client(client);\n            web3Events.emit(\"web3ClientReady\", client);\n          }\n        })\n        .catch((e) => {\n          console.error(\"Failed to build MetakeepWeb3Client\", e);\n        })\n        .finally(() => {\n          isBuildingRef.current = false;\n        });\n    }\n    // the user object changes too frequently to be used as a dependency\n    // in the useEffect below, so we use the user.id which is guaranteed to be unique for the user\n  }, [user?.id, JSON.stringify(config), walletCookie]);\n\n  return web3Client;\n};\n"]}