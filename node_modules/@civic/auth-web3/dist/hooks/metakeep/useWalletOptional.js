// --------------------------------------------------------------
// Optional hook import from @solana/wallet-adapter-react
// We try to load it using require so that if it's missing the app
// still works (integrators can provide their own wallet).
// --------------------------------------------------------------
import { useWalletInternal as fallback } from "./useWalletOptionalFallback.js";
export let useWalletInternal = fallback;
async function getUseWallet() {
    // Default implementation returns undefined connection
    if (typeof window === "undefined") {
        // Server-side rendering path - always return the fallback
        return null;
    }
    try {
        // Dynamically require the hook from the optional package.
        const walletAdapterReact = await import("@solana/wallet-adapter-react");
        return walletAdapterReact.useWallet;
    }
    catch {
        // The package is not available, so useWalletInternal remains null.
    }
}
getUseWallet().then((useWallet) => {
    if (useWallet) {
        useWalletInternal = useWallet;
    }
});
//# sourceMappingURL=useWalletOptional.js.map