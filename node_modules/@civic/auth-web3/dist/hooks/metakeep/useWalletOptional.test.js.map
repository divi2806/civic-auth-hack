{"version":3,"file":"useWalletOptional.test.js","sourceRoot":"","sources":["../../../src/hooks/metakeep/useWalletOptional.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,gCAAgC,CAAC;AAEhE,gEAAgE;AAChE,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;IAC1B,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IAC9C,OAAO;QACL,GAAG,MAAM;QACT,UAAU,EAAE,GAAG,EAAE,CAAC,cAAc;KACjC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,SAAS,CAAC,GAAG,EAAE;QACb,EAAE,CAAC,YAAY,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACnC,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC;QACnD,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,EAAE,CAAC,MAAM,CAAC,8BAA8B,EAAE,GAAG,EAAE,CAAC,CAAC;YAC/C,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;gBAChB,MAAM,EAAE,YAAY;aACrB,CAAC;SACH,CAAC,CAAC,CAAC;QAEJ,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC;QACnD,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,oBAAoB;QACjE,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,qCAAqC;QACrC,EAAE,CAAC,MAAM,CAAC,8BAA8B,EAAE,GAAG,EAAE;YAC7C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC;QACnD,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAC5C,MAAM,GAAG,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC;QACpC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACtE,MAAM,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, it, afterEach, expect, vi } from \"vitest\";\nimport { walletFallback } from \"./useWalletOptionalFallback.js\";\n\n// Mock React's useContext to return the walletFallback directly\nvi.mock(\"react\", async () => {\n  const actual = await vi.importActual(\"react\");\n  return {\n    ...actual,\n    useContext: () => walletFallback,\n  };\n});\n\ndescribe(\"useWalletInternal behavior\", () => {\n  afterEach(() => {\n    vi.resetModules();\n  });\n\n  it(\"should use fallback on server-side (no window)\", async () => {\n    vi.stubGlobal(\"window\", undefined);\n    const mod = await import(\"./useWalletOptional.js\");\n    expect(mod.useWalletInternal()).toEqual(walletFallback);\n  });\n\n  it(\"should update useWalletInternal when dynamic import succeeds\", async () => {\n    vi.doMock(\"@solana/wallet-adapter-react\", () => ({\n      useWallet: () => ({\n        wallet: \"testWallet\",\n      }),\n    }));\n\n    const mod = await import(\"./useWalletOptional.js\");\n    await new Promise((r) => setTimeout(r, 10)); // allow async tasks\n    expect(mod.useWalletInternal().wallet).toEqual(\"testWallet\");\n  });\n\n  it(\"should keep fallback when dynamic import fails\", async () => {\n    // Force the dynamic import to throw.\n    vi.doMock(\"@solana/wallet-adapter-react\", () => {\n      throw new Error(\"Module not found\");\n    });\n    const mod = await import(\"./useWalletOptional.js\");\n    await new Promise((r) => setTimeout(r, 10));\n    const res = mod.useWalletInternal();\n    expect(res.wallet).toEqual(walletFallback.wallet);\n    await expect(res.sendTransaction).rejects.toThrow(\"Wallet not found\");\n    await expect(res.connect()).resolves.toEqual(undefined);\n  });\n});\n"]}