{"version":3,"file":"useAnalyticsWithAuth.js","sourceRoot":"","sources":["../../src/hooks/useAnalyticsWithAuth.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAE7D;;;GAGG;AACH,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAS,EAAE;IAC7C,MAAM,EAAE,OAAO,EAAE,GAAG,QAAQ,EAAE,CAAC;IAE/B,SAAS,CAAC,GAAG,EAAE;QACb,sEAAsE;QACtE,0EAA0E;QAC1E,gBAAgB,CAAC,cAAc,CAAC,GAAG,EAAE;YACnC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,0DAA0D;gBAC1D,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;gBAChD,OAAO,SAAS,CAAC;YACnB,CAAC;YACD,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import { useEffect } from \"react\";\nimport { useToken } from \"@civic/auth/react\";\nimport { analyticsEmitter } from \"../lib/analytics/index.js\";\n\n/**\n * Hook to configure the analytics emitter with the user's authentication token.\n * This ensures all analytics events include the JWT for authentication with the proxy.\n */\nexport const useAnalyticsWithAuth = (): void => {\n  const { idToken } = useToken();\n\n  useEffect(() => {\n    // Set up a JWT provider function that will return the current idToken\n    // Convert null to undefined since our function expects string | undefined\n    analyticsEmitter.setJwtProvider(() => {\n      if (!idToken) {\n        // Using console.log for consistency with AnalyticsEmitter\n        console.log(\"Analytics: No ID token available\");\n        return undefined;\n      }\n      return idToken;\n    });\n  }, [idToken]);\n};\n"]}