{"version":3,"file":"useTriggerSigninOnWalletConnection.js","sourceRoot":"","sources":["../../src/hooks/useTriggerSigninOnWalletConnection.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,OAAO,IAAI,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAC/D,OAAO,EAAE,4BAA4B,EAAE,MAAM,wBAAwB,CAAC;AAEtE;;;;GAIG;AACH,MAAM,CAAC,MAAM,kCAAkC,GAAG,GAAG,EAAE;IACrD,MAAM,mBAAmB,GAAG,eAAe,EAAE,CAAC;IAE9C,SAAS,CAAC,GAAG,EAAE;QACb,4BAA4B,CAAC,sBAAsB,CAAC,GAAG,EAAE,CACvD,mBAAmB,CAAC,MAAM,EAAE,CAC7B,CAAC;IACJ,CAAC,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC","sourcesContent":["import { useEffect } from \"react\";\nimport { useUser as useUserInternal } from \"@civic/auth/react\";\nimport { singletonSolanaWalletAdapter } from \"../lib/solana/index.js\";\n\n/**\n * This hook registers the Civic signIn function with the wallet adapter.\n * It allows the wallet adapter to trigger a sign-in when needed, such as when\n * a user clicks \"connect\" in a wallet UI before they've authenticated.\n */\nexport const useTriggerSigninOnWalletConnection = () => {\n  const internalUserContext = useUserInternal();\n\n  useEffect(() => {\n    singletonSolanaWalletAdapter.registerSignInCallback(() =>\n      internalUserContext.signIn(),\n    );\n  }, [internalUserContext.signIn]);\n};\n"]}