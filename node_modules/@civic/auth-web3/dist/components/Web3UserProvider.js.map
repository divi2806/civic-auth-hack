{"version":3,"file":"Web3UserProvider.js","sourceRoot":"","sources":["../../src/components/Web3UserProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\nimport {\n  type AuthContextType,\n  useToken,\n  useUser as useUserInternal,\n} from \"@civic/auth/react\";\nimport React, {\n  createContext,\n  type FC,\n  type PropsWithChildren,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport { useCreateWallets } from \"../hooks/useCreateWallets.js\";\nimport { AuthStatus, type DisplayMode } from \"@civic/auth\";\nimport {\n  type ExistingWeb3UserContext,\n  type NewWeb3UserContext,\n  type Web3ProviderProps,\n  type Web3UserContextType,\n} from \"../types.js\";\nimport { useWeb3Client } from \"../hooks/metakeep/useWeb3Client.js\";\nimport { useTriggerSigninOnWalletConnection } from \"../hooks/useTriggerSigninOnWalletConnection.js\";\nimport { useAnalyticsWithAuth } from \"../hooks/useAnalyticsWithAuth.js\";\nimport { useState } from \"react\";\n\n// The Web3UserProvider component is a wrapper around the CivicAuthProvider component that provides\n// an augmented user object to the rest of the application, with web3 wallet information.\n// If the user already has an embedded wallet, the wallet address and viem client are added to the user object.\n// NOTE: When using wagmi, these augmented user fields are not necessary, as the wagmi connector\n// provides the same information and can be directly injected into the wagmi config\n// If the user does not yet have an embedded wallet, a createWallet function is added to the user object.\nconst defaultContext = {\n  displayMode: \"iframe\" as DisplayMode,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  isSigningOut: false,\n  signIn: () => {\n    throw new Error(\"signIn not implemented\");\n  },\n  signOut: () => {\n    throw new Error(\"signOut not implemented\");\n  },\n  user: null,\n  walletAddress: null,\n  wallet: null,\n  createWallet: () => {\n    throw new Error(\"createWallet not implemented\");\n  },\n  walletCreationInProgress: false,\n  walletCreationAllowed: undefined,\n  authStatus: AuthStatus.UNAUTHENTICATED,\n} as Web3UserContextType;\nconst Web3UserContext = createContext<Web3UserContextType>(defaultContext);\nexport const useUser = () => useContext(Web3UserContext);\n\ntype InternalWeb3ProviderProps = {\n  registerLogoutCallback: (callback: () => Promise<void>) => void;\n};\n\nexport const Web3UserProvider: FC<\n  PropsWithChildren & Web3ProviderProps & InternalWeb3ProviderProps\n> = ({ children, registerLogoutCallback, ...props }) => {\n  const internalUserContext = useUserInternal();\n  const tokens = useToken();\n  const [walletCreationAllowed, setWalletCreationAllowed] = useState<\n    boolean | undefined\n  >(undefined);\n\n  // we need to sign out of the civic auth provider when the user signs out of the web3 wallet\n  // however, as the user can also be signed out via the civic auth provider, we don't\n  // want to create a loop here, so we make sure the user is authenticated before trying\n  const doSignOut = useCallback(() => {\n    if (internalUserContext.authStatus !== AuthStatus.AUTHENTICATED) {\n      return;\n    }\n    return internalUserContext.signOut();\n  }, [internalUserContext.authStatus]);\n  const web3Client = useWeb3Client(props, doSignOut);\n\n  // if a wallet connector UI is being used, this will trigger a sign in when the user selects the civic wallets\n  useTriggerSigninOnWalletConnection();\n\n  // Set up analytics to include the user's authentication token\n  useAnalyticsWithAuth();\n\n  const { createWallet, walletCreationInProgress } =\n    useCreateWallets(web3Client);\n\n  // Note: We no longer need to check wallet creation permissions here\n  // as the permission check is now performed in the Web3Client.build method\n  // We'll keep the state for future use if needed\n  useEffect(() => {\n    if (internalUserContext.authStatus !== AuthStatus.AUTHENTICATED) {\n      // Reset when user logs out\n      setWalletCreationAllowed(undefined);\n    }\n  }, [internalUserContext.authStatus]);\n\n  // register the logout callback\n  useEffect(() => {\n    if (web3Client) {\n      registerLogoutCallback(() => web3Client.disconnect());\n    }\n  }, [web3Client, registerLogoutCallback]);\n\n  const web3User: Web3UserContextType = useMemo(() => {\n    const isAuthenticated = !!internalUserContext.user;\n    const authContext: AuthContextType = {\n      signIn: internalUserContext.signIn,\n      authStatus: internalUserContext.authStatus,\n      isAuthenticated,\n      isLoading: internalUserContext.isLoading,\n      error: internalUserContext.error,\n      signOut: internalUserContext.signOut,\n      displayMode: internalUserContext.displayMode,\n    };\n\n    if (!web3Client) {\n      return {\n        ...authContext,\n        ...tokens,\n        // we override the civic auth isLoading state as we're still loading until we have a web3 client\n        isLoading: !!internalUserContext?.user,\n        user: null,\n        createWallet,\n        walletCreationInProgress,\n      } as NewWeb3UserContext;\n    }\n\n    // we don't have an address so we're a new user and need to expose the createWallet function\n    if (!web3Client.ethereum?.address && !web3Client.solana?.address) {\n      return {\n        ...authContext,\n        ...tokens,\n        isLoading: false,\n        createWallet,\n        user: internalUserContext.user,\n        walletCreationInProgress,\n        walletCreationAllowed,\n      } as NewWeb3UserContext;\n    }\n\n    // this is an existing user with a wallet\n    return {\n      ...authContext,\n      ...tokens,\n      isLoading: false,\n      ethereum: {\n        address: web3Client.ethereum.address,\n        wallet: web3Client.ethereum.client,\n      },\n      solana: {\n        address: web3Client.solana.address,\n        wallet: web3Client.solana.wallet,\n      },\n      user: internalUserContext.user,\n      walletCreationInProgress,\n    } as ExistingWeb3UserContext;\n  }, [\n    internalUserContext.user,\n    createWallet,\n    web3Client?.ethereum.address,\n    web3Client?.solana.address,\n    walletCreationAllowed,\n    tokens,\n    internalUserContext.authStatus,\n    internalUserContext.isLoading,\n    internalUserContext.error,\n    internalUserContext.signIn,\n    internalUserContext.signOut,\n    internalUserContext.displayMode,\n    walletCreationInProgress,\n  ]);\n\n  return (\n    <Web3UserContext.Provider value={web3User}>\n      {children}\n    </Web3UserContext.Provider>\n  );\n};\n"]}