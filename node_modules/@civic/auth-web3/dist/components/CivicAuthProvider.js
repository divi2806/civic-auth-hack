"use client";
import { CivicAuthProvider as InternalCivicAuthProvider } from "@civic/auth/react";
import React, { useCallback, useState } from "react";
import { Web3UserProvider } from "./Web3UserProvider.js";
import {} from "../types.js";
// A wrapper around civic auth that injects an embedded wallet.
// TODO should be in the reactjs/ folder
export function CivicAuthProvider({ children, ...props }) {
    // allow the embedded wallet to add a hook to the logout process, ensuring its state gets cleaned up
    // for security reasons, and to avoid bugs when changing users
    const [logoutCallback, setLogoutCallback] = useState();
    const registerLogout = useCallback((callback) => setLogoutCallback(() => callback), [setLogoutCallback]);
    return (React.createElement(InternalCivicAuthProvider, { ...props, onSignOut: async () => {
            await logoutCallback?.();
        } },
        React.createElement(Web3UserProvider, { registerLogoutCallback: registerLogout, ...props }, children)));
}
//# sourceMappingURL=CivicAuthProvider.js.map