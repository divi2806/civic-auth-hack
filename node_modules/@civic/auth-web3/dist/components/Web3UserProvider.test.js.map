{"version":3,"file":"Web3UserProvider.test.js","sourceRoot":"","sources":["../../src/components/Web3UserProvider.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-function-type */\n/**\n * @jest-environment jsdom\n */\nimport { vi, beforeEach } from \"vitest\";\nimport { type Web3ProviderProps } from \"../types.js\";\nimport { type Web3Client } from \"../lib/Web3Client.js\";\nimport type { EthereumWeb3Client } from \"../lib/ethereum/EthereumWeb3Client.js\";\nimport type { SolanaWeb3Client } from \"../lib/solana/SolanaWeb3Client.js\";\nimport type { TypedEthereumProvider } from \"../lib/ethereum/EIP1193ProviderImpl.js\";\nimport type { SolanaWallet } from \"../types.js\";\nimport type { Address, WalletClient } from \"viem\";\n\n// Note: We need to set up the mocks BEFORE importing the components\n// Vitest hoists vi.mock calls to the top of the file\n\n// Setup mock functions\nconst mockSignIn = vi.fn();\nconst mockSignOut = vi.fn();\nconst mockCreateWallet = vi.fn().mockResolvedValue(undefined);\nconst mockDisconnect = vi.fn().mockResolvedValue(undefined);\nconst mockCreateWallets = vi.fn().mockResolvedValue(null);\n\n// Define types for our mock data\ntype MockUserDataType = {\n  user: { id: string; email: string } | null;\n  signIn: typeof mockSignIn;\n  signOut: typeof mockSignOut;\n  authStatus: string;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: null;\n  displayMode: string;\n};\n\n// Create mock implementations of the required interfaces\nconst createMockEthereumClient = (\n  address: Address | null,\n): EthereumWeb3Client => ({\n  address,\n  client: address ? ({} as WalletClient) : null,\n  provider: {} as TypedEthereumProvider,\n  disconnect: mockDisconnect,\n});\n\nconst createMockSolanaClient = (address: string | null): SolanaWeb3Client => ({\n  address: address as string, // TypeScript trick to satisfy the readonly property\n  wallet: address ? ({} as SolanaWallet) : (null as unknown as SolanaWallet),\n  disconnect: mockDisconnect,\n});\n\nconst createMockWeb3Client = (\n  ethAddress: Address | null = null,\n  solAddress: string | null = null,\n): Web3Client => ({\n  ethereum: createMockEthereumClient(ethAddress),\n  solana: createMockSolanaClient(solAddress),\n  connected: true,\n  createWallets: mockCreateWallets,\n  disconnect: mockDisconnect,\n});\n\ntype MockWeb3ClientFnType = (\n  props?: Web3ProviderProps,\n  doSignOut?: () => void,\n) => Web3Client;\n\n// Initialize mock data\nlet mockUserData: MockUserDataType = {\n  user: null,\n  signIn: mockSignIn,\n  signOut: mockSignOut,\n  authStatus: \"UNAUTHENTICATED\",\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  displayMode: \"iframe\",\n};\n\nlet mockWeb3ClientData: Web3Client | MockWeb3ClientFnType | null = null;\n\n// Mock dependencies\nvi.mock(\"@civic/auth/react\", () => ({\n  useToken: () => ({\n    token: \"mock-token\",\n    idToken: \"mock-id-token\",\n  }),\n  useUser: () => mockUserData,\n}));\n\nvi.mock(\"../hooks/useCreateWallets.js\", () => ({\n  useCreateWallets: () => ({\n    createWallet: mockCreateWallet,\n    walletCreationInProgress: false,\n    error: null,\n    createWalletFinished: false,\n  }),\n}));\n\nvi.mock(\"../hooks/metakeep/useWeb3Client.js\", () => ({\n  useWeb3Client: (props?: Web3ProviderProps, doSignOut?: () => void) => {\n    // If mockWeb3ClientData is a function, call it with doSignOut\n    if (typeof mockWeb3ClientData === \"function\") {\n      return mockWeb3ClientData(props, doSignOut);\n    }\n    return mockWeb3ClientData;\n  },\n}));\n\nvi.mock(\"../hooks/useTriggerSigninOnWalletConnection.js\", () => ({\n  useTriggerSigninOnWalletConnection: () => undefined,\n}));\n\n// NOW import everything else\nimport { describe, it, expect } from \"vitest\";\nimport { render, screen } from \"@testing-library/react\";\nimport \"@testing-library/jest-dom\";\nimport { Web3UserProvider, useUser } from \"./Web3UserProvider.js\";\nimport { AuthStatus } from \"@civic/auth\";\nimport React from \"react\";\n\n// Test component that accesses the Web3UserContext\nconst TestComponent = () => {\n  const user = useUser();\n  return (\n    <div>\n      <div data-testid=\"auth-status\">{user.authStatus}</div>\n      <div data-testid=\"is-authenticated\">\n        {String(user.authStatus === AuthStatus.AUTHENTICATED)}\n      </div>\n      <div data-testid=\"is-loading\">{String(user.isLoading)}</div>\n      <div data-testid=\"wallet-creation-in-progress\">\n        {String(user.walletCreationInProgress)}\n      </div>\n      {user.user && <div data-testid=\"user-exists\">true</div>}\n      {\"createWallet\" in user && (\n        <button data-testid=\"create-wallet-button\">Create Wallet</button>\n      )}\n      {\"ethereum\" in user && user.ethereum?.address && (\n        <div data-testid=\"ethereum-address\">{user.ethereum.address}</div>\n      )}\n      {\"solana\" in user && user.solana?.address && (\n        <div data-testid=\"solana-address\">{user.solana.address}</div>\n      )}\n    </div>\n  );\n};\n\ndescribe(\"Web3UserProvider\", () => {\n  const mockRegisterLogoutCallback = vi.fn();\n\n  beforeEach(() => {\n    // Reset mock data to default values\n    mockUserData = {\n      user: null,\n      signIn: mockSignIn,\n      signOut: mockSignOut,\n      authStatus: \"UNAUTHENTICATED\",\n      isAuthenticated: false,\n      isLoading: false,\n      error: null,\n      displayMode: \"iframe\",\n    };\n    mockWeb3ClientData = null;\n    vi.clearAllMocks();\n  });\n\n  it(\"should render children\", () => {\n    render(\n      <Web3UserProvider registerLogoutCallback={mockRegisterLogoutCallback}>\n        <div data-testid=\"child\">Child Component</div>\n      </Web3UserProvider>,\n    );\n\n    expect(screen.getByTestId(\"child\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"child\")).toHaveTextContent(\"Child Component\");\n  });\n\n  it(\"should provide default context values when no web3client exists\", () => {\n    render(\n      <Web3UserProvider registerLogoutCallback={mockRegisterLogoutCallback}>\n        <TestComponent />\n      </Web3UserProvider>,\n    );\n\n    expect(screen.getByTestId(\"auth-status\")).toHaveTextContent(\n      \"UNAUTHENTICATED\",\n    );\n    expect(screen.getByTestId(\"is-authenticated\")).toHaveTextContent(\"false\");\n    expect(screen.getByTestId(\"is-loading\")).toHaveTextContent(\"false\");\n    expect(screen.getByTestId(\"wallet-creation-in-progress\")).toHaveTextContent(\n      \"false\",\n    );\n    expect(screen.getByTestId(\"create-wallet-button\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"create-wallet-button\")).toHaveTextContent(\n      \"Create Wallet\",\n    );\n  });\n\n  it(\"should provide proper context when web3client exists but no wallet addresses\", () => {\n    // Setup authenticated user for this test\n    mockUserData = {\n      user: { id: \"user-123\", email: \"test@example.com\" },\n      signIn: mockSignIn,\n      signOut: mockSignOut,\n      authStatus: AuthStatus.AUTHENTICATED,\n      isAuthenticated: true,\n      isLoading: false,\n      error: null,\n      displayMode: \"iframe\",\n    };\n\n    // Setup web3client without addresses\n    mockWeb3ClientData = createMockWeb3Client(null, null);\n\n    render(\n      <Web3UserProvider registerLogoutCallback={mockRegisterLogoutCallback}>\n        <TestComponent />\n      </Web3UserProvider>,\n    );\n\n    expect(screen.getByTestId(\"auth-status\")).toHaveTextContent(\n      AuthStatus.AUTHENTICATED,\n    );\n    expect(screen.getByTestId(\"is-authenticated\")).toHaveTextContent(\"true\");\n    expect(screen.getByTestId(\"user-exists\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"create-wallet-button\")).toBeInTheDocument();\n  });\n\n  it(\"should provide existing wallet context when web3client includes addresses\", () => {\n    // Setup authenticated user for this test\n    mockUserData = {\n      user: { id: \"user-123\", email: \"test@example.com\" },\n      signIn: mockSignIn,\n      signOut: mockSignOut,\n      authStatus: AuthStatus.AUTHENTICATED,\n      isAuthenticated: true,\n      isLoading: false,\n      error: null,\n      displayMode: \"iframe\",\n    };\n\n    // Setup web3client with wallet addresses\n    mockWeb3ClientData = createMockWeb3Client(\n      \"0x1234567890123456789012345678901234567890\" as Address,\n      \"SoLAddrE5S111111111111111111111111111111111\",\n    );\n\n    render(\n      <Web3UserProvider registerLogoutCallback={mockRegisterLogoutCallback}>\n        <TestComponent />\n      </Web3UserProvider>,\n    );\n\n    expect(screen.getByTestId(\"auth-status\")).toHaveTextContent(\n      AuthStatus.AUTHENTICATED,\n    );\n    expect(screen.getByTestId(\"is-authenticated\")).toHaveTextContent(\"true\");\n    expect(screen.getByTestId(\"ethereum-address\")).toHaveTextContent(\n      \"0x1234567890123456789012345678901234567890\",\n    );\n    expect(screen.getByTestId(\"solana-address\")).toHaveTextContent(\n      \"SoLAddrE5S111111111111111111111111111111111\",\n    );\n    expect(\n      screen.queryByTestId(\"create-wallet-button\"),\n    ).not.toBeInTheDocument();\n  });\n\n  it(\"should register logout callback when web3client is available\", () => {\n    // Setup web3client with disconnect method\n    mockWeb3ClientData = createMockWeb3Client(null, null);\n\n    render(\n      <Web3UserProvider registerLogoutCallback={mockRegisterLogoutCallback}>\n        <TestComponent />\n      </Web3UserProvider>,\n    );\n\n    // Check that the logout callback was registered\n    expect(mockRegisterLogoutCallback).toHaveBeenCalledTimes(1);\n\n    // Call the registered callback\n    const registeredCallback = mockRegisterLogoutCallback.mock\n      .calls[0]?.[0] as () => Promise<void>;\n    registeredCallback();\n\n    // Verify the web3client's disconnect was called\n    expect(mockDisconnect).toHaveBeenCalledTimes(1);\n  });\n\n  it(\"should handle sign out correctly when authStatus is AUTHENTICATED\", () => {\n    const authMockSignOut = vi.fn();\n\n    // Setup authenticated user with signOut function\n    mockUserData = {\n      user: { id: \"user-123\", email: \"test@example.com\" },\n      signIn: mockSignIn,\n      signOut: authMockSignOut,\n      authStatus: AuthStatus.AUTHENTICATED,\n      isAuthenticated: true,\n      isLoading: false,\n      error: null,\n      displayMode: \"iframe\",\n    };\n\n    // Capture the doSignOut function passed to useWeb3Client\n    let capturedDoSignOut: (() => void) | null = null;\n    mockWeb3ClientData = (\n      props?: Web3ProviderProps,\n      doSignOut?: () => void,\n    ) => {\n      capturedDoSignOut = doSignOut || null;\n      return createMockWeb3Client(null, null);\n    };\n\n    render(\n      <Web3UserProvider registerLogoutCallback={mockRegisterLogoutCallback}>\n        <TestComponent />\n      </Web3UserProvider>,\n    );\n\n    // Call the doSignOut function that was captured\n    if (capturedDoSignOut) {\n      (capturedDoSignOut as Function)();\n    }\n\n    // The signOut function should have been called because authStatus is AUTHENTICATED\n    expect(authMockSignOut).toHaveBeenCalledTimes(1);\n  });\n\n  it(\"should not call signOut when authStatus is not AUTHENTICATED\", () => {\n    const authMockSignOut = vi.fn();\n\n    // Setup unauthenticated user with signOut function\n    mockUserData = {\n      user: null,\n      signIn: mockSignIn,\n      signOut: authMockSignOut,\n      authStatus: AuthStatus.UNAUTHENTICATED,\n      isAuthenticated: false,\n      isLoading: false,\n      error: null,\n      displayMode: \"iframe\",\n    };\n\n    // Capture the doSignOut function passed to useWeb3Client\n    let capturedDoSignOut: (() => void) | null = null;\n    mockWeb3ClientData = (\n      props?: Web3ProviderProps,\n      doSignOut?: () => void,\n    ) => {\n      capturedDoSignOut = doSignOut || null;\n      return createMockWeb3Client(null, null);\n    };\n\n    render(\n      <Web3UserProvider registerLogoutCallback={mockRegisterLogoutCallback}>\n        <TestComponent />\n      </Web3UserProvider>,\n    );\n\n    // Call the doSignOut function that was captured\n    if (capturedDoSignOut) {\n      (capturedDoSignOut as Function)();\n    }\n\n    // The signOut function should NOT have been called because authStatus is UNAUTHENTICATED\n    expect(authMockSignOut).not.toHaveBeenCalled();\n  });\n});\n"]}