{"version":3,"file":"utils.test.js","sourceRoot":"","sources":["../../../src/wagmi/lib/utils.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAE9C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,2EAA2E,EAAE,GAAG,EAAE;YACnF,UAAU;YACV,MAAM,SAAS,GAAG;gBAChB,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI;aACM,CAAC;YAC1B,MAAM;YACN,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;YAClC,SAAS;YACT,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,uGAAuG,EAAE,GAAG,EAAE;YAC/G,UAAU;YACV,MAAM,SAAS,GAAG,EAA0B,CAAC;YAC7C,MAAM;YACN,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;YAClC,SAAS;YACT,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, expect, it } from \"vitest\";\nimport type { Connector } from \"wagmi\";\nimport { isReady } from \"./utils.js\";\n\ndescribe(\"wagmi/utils\", () => {\n  describe(\"isReady\", () => {\n    it(\"should return true if the connector has a ready method which returns true\", () => {\n      // Arrange\n      const connector = {\n        ready: () => true,\n      } as unknown as Connector;\n      // Act\n      const result = isReady(connector);\n      // Assert\n      expect(result).toBe(true);\n    });\n    it(\"should return true if the connector does not have a ready property (assume always ready in that case)\", () => {\n      // Arrange\n      const connector = {} as unknown as Connector;\n      // Act\n      const result = isReady(connector);\n      // Assert\n      expect(result).toBe(true);\n    });\n  });\n});\n"]}