{"version":3,"file":"useAutoConnect.test.js","sourceRoot":"","sources":["../../../src/wagmi/hooks/useAutoConnect.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { describe, it, expect, vi, beforeEach } from \"vitest\";\nimport { renderHook } from \"@testing-library/react\";\nimport { useAutoConnect } from \"./useAutoConnect.js\";\nimport {\n  useConnect,\n  useAccount,\n  type Connector,\n  type CreateConnectorFn,\n  type UseConnectReturnType,\n  type UseAccountReturnType,\n} from \"wagmi\";\nimport { useUser } from \"../../components/Web3UserProvider.js\";\nimport { userHasWallet } from \"../../lib/walletUtils.js\";\nimport { LazyWagmiConnector } from \"../lib/LazyWagmiConnector.js\";\nimport { isReady } from \"../lib/utils.js\";\nimport type { Web3UserContextType } from \"../../types.js\";\n\n// Mock dependencies\nvi.mock(\"wagmi\", () => ({\n  useConnect: vi.fn(),\n  useAccount: vi.fn(),\n}));\n\nvi.mock(\"../../components/Web3UserProvider\", () => ({\n  useUser: vi.fn(),\n}));\n\nvi.mock(\"../../lib/walletUtils\", async (importOriginal) => ({\n  ...(await importOriginal()),\n  userHasWallet: vi.fn(),\n}));\n\nvi.mock(\"../lib/utils\", () => ({\n  isReady: vi.fn(),\n}));\n\ndescribe(\"useAutoConnect\", () => {\n  const stubConnector = {\n    id: LazyWagmiConnector.type,\n    emitter: {\n      on: vi.fn(),\n    },\n  } as unknown as Connector<CreateConnectorFn>;\n\n  const stubConnect = vi.fn();\n\n  beforeEach(() => {\n    vi.clearAllMocks();\n\n    // Default stub implementations\n    vi.mocked(useConnect).mockReturnValue({\n      status: \"idle\",\n      connectors: [stubConnector],\n      connect: stubConnect,\n    } as unknown as UseConnectReturnType);\n\n    vi.mocked(useAccount).mockReturnValue({\n      isConnected: false,\n    } as unknown as UseAccountReturnType);\n\n    vi.mocked(useUser).mockReturnValue({\n      user: null,\n      walletCreationInProgress: false,\n      createWallet: vi.fn(),\n    } as unknown as Web3UserContextType);\n\n    vi.mocked(userHasWallet).mockReturnValue(false);\n    vi.mocked(isReady).mockReturnValue(true);\n  });\n\n  it(\"should attempt to connect when conditions are met\", () => {\n    renderHook(() => useAutoConnect());\n\n    expect(stubConnect).toHaveBeenCalledWith(\n      { connector: stubConnector },\n      { onSettled: expect.any(Function) },\n    );\n  });\n\n  it(\"should not connect when autoConnectEmbeddedWallet is false\", () => {\n    renderHook(() =>\n      useAutoConnect({\n        autoConnectEmbeddedWallet: false,\n        autoCreateWallet: true,\n      }),\n    );\n\n    expect(stubConnect).not.toHaveBeenCalled();\n  });\n\n  it(\"should not connect when already connected\", () => {\n    vi.mocked(useAccount).mockReturnValue({\n      isConnected: true,\n    } as UseAccountReturnType);\n\n    renderHook(() => useAutoConnect());\n\n    expect(stubConnect).not.toHaveBeenCalled();\n  });\n\n  it(\"should register connector events\", () => {\n    renderHook(() => useAutoConnect());\n\n    expect(stubConnector.emitter.on).toHaveBeenCalledWith(\n      \"connect\",\n      expect.any(Function),\n    );\n    expect(stubConnector.emitter.on).toHaveBeenCalledWith(\n      \"change\",\n      expect.any(Function),\n    );\n  });\n\n  it(\"should create wallet when conditions are met\", () => {\n    const stubCreateWallet = vi.fn();\n    vi.mocked(useUser).mockReturnValue({\n      user: { id: \"123\" },\n      walletCreationInProgress: false,\n      createWallet: stubCreateWallet,\n    } as unknown as Web3UserContextType);\n\n    renderHook(() => useAutoConnect());\n\n    expect(stubCreateWallet).toHaveBeenCalled();\n  });\n\n  it(\"should not create wallet when autoCreateWallet is false\", () => {\n    const stubCreateWallet = vi.fn();\n    vi.mocked(useUser).mockReturnValue({\n      user: { id: \"123\" },\n      walletCreationInProgress: false,\n      createWallet: stubCreateWallet,\n    } as unknown as Web3UserContextType);\n\n    renderHook(() =>\n      useAutoConnect({\n        autoConnectEmbeddedWallet: true,\n        autoCreateWallet: false,\n      }),\n    );\n\n    expect(stubCreateWallet).not.toHaveBeenCalled();\n  });\n\n  it(\"should not create wallet when wallet creation is in progress\", () => {\n    const stubCreateWallet = vi.fn();\n    vi.mocked(useUser).mockReturnValue({\n      user: { id: \"123\" },\n      walletCreationInProgress: true,\n      createWallet: stubCreateWallet,\n    } as unknown as Web3UserContextType);\n\n    renderHook(() => useAutoConnect());\n\n    expect(stubCreateWallet).not.toHaveBeenCalled();\n  });\n\n  it(\"should not create wallet when user already has one\", () => {\n    const stubCreateWallet = vi.fn();\n    vi.mocked(useUser).mockReturnValue({\n      user: { id: \"123\" },\n      walletCreationInProgress: false,\n      createWallet: stubCreateWallet,\n    } as unknown as Web3UserContextType);\n    vi.mocked(userHasWallet).mockReturnValue(true);\n\n    renderHook(() => useAutoConnect());\n\n    expect(stubCreateWallet).not.toHaveBeenCalled();\n  });\n\n  it(\"should return the civic connector\", () => {\n    const { result } = renderHook(() => useAutoConnect());\n\n    expect(result.current.civicConnector).toBe(stubConnector);\n  });\n});\n"]}