{
  "version": 3,
  "sources": ["../../@civic/auth-web3/src/reactjs/index.tsx", "../../@civic/auth-web3/src/hooks/useWallet.ts"],
  "sourcesContent": ["import { printVersion } from \"../shared/index.js\";\nprintVersion();\nexport { useToken } from \"@civic/auth/react\";\nexport { useWallet } from \"../hooks/useWallet.js\";\nexport {\n  UserButton,\n  SignInButton,\n  SignOutButton,\n  type CivicAuthProviderProps,\n  CivicAuthIframeContainer,\n} from \"@civic/auth/react\";\nexport type {\n  AuthContextType,\n  TokenContextType,\n  UserContextType,\n} from \"@civic/auth/react\";\nexport { CivicAuthProvider } from \"../components/CivicAuthProvider.js\";\nexport { useUser } from \"../components/Web3UserProvider.js\";\n", "import { useUser } from \"../components/Web3UserProvider.js\";\nimport { userHasWallet } from \"../lib/walletUtils.js\";\nimport type { ChainType, Wallets } from \"../types.js\";\n\nexport const useWallet = <T extends ChainType>({\n  type,\n}: {\n  type: T;\n}): {\n  address: Wallets[T][\"address\"] | undefined;\n  wallet: Wallets[T][\"wallet\"] | undefined;\n} => {\n  const userContext = useUser();\n  if (!userHasWallet(userContext)) {\n    return {\n      wallet: undefined,\n      address: undefined,\n    };\n  }\n  return userContext[type];\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;;;ACAA;IAAAC,eAAA;IAAAA,eAAA;AAIO,IAAM,YAAY,CAAsB,EAC7C,KAAI,MAMF;AACF,QAAM,cAAc,QAAO;AAC3B,MAAI,CAAC,cAAc,WAAW,GAAG;AAC/B,WAAO;MACL,QAAQ;MACR,SAAS;;EAEb;AACA,SAAO,YAAY,IAAI;AACzB;;;ADnBA,aAAY;",
  "names": ["import_dist", "import_dist"]
}
